<controls:BlurredDecorationWindow
                                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                  xmlns:core="clr-namespace:RGB.NET.Core;assembly=RGB.NET.Core"
                                  xmlns:ui="clr-namespace:RGBSyncPlus.UI"
                                  xmlns:controls="clr-namespace:RGBSyncPlus.Controls"
                                  xmlns:p = "clr-namespace:RGBSyncPlus.Properties"
                                  xmlns:styles="clr-namespace:RGBSyncPlus.Styles"
                                  xmlns:attached="clr-namespace:RGBSyncPlus.Attached"
                                  xmlns:helper="clr-namespace:RGBSyncPlus.Helper"
                                  xmlns:dd="urn:gong-wpf-dragdrop"
                                  xmlns:Converter="clr-namespace:RGBSyncPlus.Converter" x:Class="RGBSyncPlus.UI.ConfigurationWindow"
                                  mc:Ignorable="d"
                                  Title="{x:Static p:Resources.Title}" 
                                  Icon="pack://application:,,,/RGBSync+;component/tl_icon.ico"
                                  IconCommand="{Binding OpenHomepageCommand}"
                                  Width="1280"  Height="720"
                                  Closed="ConfigurationWindow_OnClosed" ResizeMode="CanMinimize">

    <controls:BlurredDecorationWindow.Resources>
        <styles:CachedResourceDictionary>
            <styles:CachedResourceDictionary.MergedDictionaries>
                <styles:CachedResourceDictionary Source="/RGBSync+;component/Styles/RainbowDefault/Navigation.xaml" />
                <styles:CachedResourceDictionary Source="/RGBSync+;component/Styles/RainbowDefault/Scrollbar.xaml" />
            </styles:CachedResourceDictionary.MergedDictionaries>
            <Converter:IndeterminateBoolToOpacityConverter x:Key="IndeterminateBoolToOpacityConverter"/>
            <Converter:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter"/>
            <Converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <Converter:DeviceTypeToImageConverter x:Key="DeviceTypeToImageConverter"/>

            <DataTemplate x:Key="DeviceGroupItemTemplate">
        
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding AllSelected}" Opacity="{Binding AllSelectedIndeterminate, Converter={StaticResource IndeterminateBoolToOpacityConverter}}"></CheckBox>
                        <Image Width="64" Height="64"  Grid.Column="1" Margin="-520,0,0,0" Source="{Binding RGBDevice.DeviceInfo.DeviceType, Converter={StaticResource DeviceTypeToImageConverter}}">
                        </Image>
                            <TextBlock Grid.Column="1" Text="{Binding Name}" FontSize="24" Margin="80,-5,0,0" FontFamily="Segoe UI Light" Foreground="White" VerticalAlignment="Center"/>

                            <Button Grid.Column="2" Margin="0,0,5,0" Visibility="{Binding Expanded, Converter={StaticResource BoolToVisibilityConverter}}" Click="ToggleExpanded" Width="32" Height="32" HorizontalAlignment="Right">
                                <TextBlock Foreground="White" MouseDown="ToggleExpanded"><Image Source="arrow_up.png"></Image></TextBlock>
                            </Button>

                        <Button Grid.Column="2" Margin="0,0,5,0" Visibility="{Binding Expanded, Converter={StaticResource InvertedBoolToVisibilityConverter}}" Click="ToggleExpanded"  Width="32" Height="32" HorizontalAlignment="Right">
                            <TextBlock Foreground="White" MouseDown="ToggleExpanded"><Image Source="arrow_down.png"></Image></TextBlock>
                        </Button>

                        </Grid>
                        <ListView Grid.Row="1" ItemsSource="{Binding DeviceLeds}" ItemTemplate="{DynamicResource DeviceGroupLEDItemTemplate}" Background="Transparent" Foreground="White" BorderBrush="Transparent" Visibility="{Binding Expanded, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Grid>
          
            </DataTemplate>
            <DataTemplate x:Key="DeviceGroupLEDItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding IsSelected}"/>
                    <TextBlock Text="{Binding Led.Id, Mode=OneWay}"/>
                </StackPanel>
            </DataTemplate>
            <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
            <Style x:Key="ListViewStyle1" TargetType="{x:Type ListView}">
                <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                                <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="false"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </styles:CachedResourceDictionary>
    </controls:BlurredDecorationWindow.Resources>


    <controls:BlurredDecorationWindow.DataContext>
        <ui:ConfigurationViewModel/>
    </controls:BlurredDecorationWindow.DataContext>

    <TabControl Style="{StaticResource StyleTabControlNavigation}">
        <TabItem Header="{x:Static p:Resources.Page1Header}">

            <AdornerDecorator>
                <DockPanel LastChildFill="True" >
                    <GroupBox DockPanel.Dock="Bottom" Margin="0,8,1006,0" >
                        <DockPanel VerticalAlignment="Bottom">
                            <DockPanel DockPanel.Dock="Top"
                                    HorizontalAlignment="Center" >
                                <Button Command="{Binding ImportCommand}" >
                                    <StackPanel Height="Auto" Orientation="Horizontal">
                                        <Image Margin="0,0,2,0" Width="16" Height="16" Source="/RGBSync+;component/Resources/import.png" />
                                        <TextBlock TextWrapping="Wrap" Text="{x:Static p:Resources.ImportButton}"/>
                                    </StackPanel>
                                </Button>
                                <Button
                                    Command="{Binding ImportCloudCommand}" ToolTip="Import data from cloud save.">
                                    <Image Margin="0,0,2,0" Width="16" Height="16" Source="/RGBSync+;component/Resources/DownloadFromCloud.png" />
                                </Button>
                            </DockPanel>
                            <DockPanel  DockPanel.Dock="Bottom"
                                    HorizontalAlignment="Center" >
                                <Button
                                    Command="{Binding ExportCommand}" >
                                    <StackPanel Height="Auto" Orientation="Horizontal">
                                        <Image Margin="0,0,2,0" Width="16" Height="16" Source="/RGBSync+;component/Resources/export.png" />
                                        <TextBlock Text="{x:Static p:Resources.ExportButton}"/>
                                    </StackPanel>
                                </Button>
                                <Button
                                    Command="{Binding ExportCloudCommand}" ToolTip="Export data to cloud save.">
                                    <Image Margin="0,0,2,0" Width="16" Height="16" Source="/RGBSync+;component/Resources/UploadToCloud.png" />
                                </Button>
                            </DockPanel>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox DockPanel.Dock="Bottom" Margin="0,8,1006,0" >
                        <GroupBox.Resources>
                            <Style BasedOn="{StaticResource StyleLabelForm}" TargetType="{x:Type Label}" />
                        </GroupBox.Resources>
                        <DockPanel VerticalAlignment="Bottom">
                            <Label controls:Form.IsLabel="True" 
                                               Content="{x:Static p:Resources.ProfileNameLabel}" />
                            <TextBox controls:Form.Fill="True"
                                                 Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" SpellCheck.IsEnabled="True" />

                        </DockPanel>
                    </GroupBox>
                    <GroupBox DockPanel.Dock="Left" Width="260">
                        <DockPanel VerticalAlignment="Top" >

                            <Button DockPanel.Dock="Bottom"
                                    HorizontalAlignment="Center" 
                                    Margin="8" 
                                    Command="{Binding AddSyncGroupCommand}" >
                                <StackPanel VerticalAlignment="Center" Height="Auto" Orientation="Horizontal">
                                    <Image Margin="0,0,2,0" Width="18" Height="18" Source="/RGBSync+;component/Resources/add.png" />
                                    <TextBlock VerticalAlignment="Center" FontSize="16" Text="{x:Static p:Resources.NewGroupButton}"/>
                                </StackPanel>
                            </Button>


                            <ListBox ItemsSource="{Binding SyncGroups}"
                                     SelectedItem="{Binding SelectedSyncGroup}"
                                     ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                     ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                     x:Name="LEDGroupsListbox">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <Button Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                                    ToolTip="Remove"
                                                    Command="{Binding DataContext.RemoveSyncGroupCommand, RelativeSource={RelativeSource AncestorType={x:Type controls:BlurredDecorationWindow}}}"
                                                    CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                                                <Image Source="/RGBSync+;component/Resources/close.png" />
                                            </Button>
                                            <TextBlock Grid.Column="1" Margin="4" Text="{Binding DisplayName}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </GroupBox>



                    <DockPanel Margin="8,0,0,-41">
                        <GroupBox DockPanel.Dock="Top">
                            <Grid>
                                <Border HorizontalAlignment="Center" 
                                        VerticalAlignment="Top" 
                                        Margin="16"
                                        Visibility="{Binding SelectedSyncGroup, ConverterParameter=True, Converter={StaticResource NullToVisibilityConverter}}">
                                    <TextBlock Text="{x:Static p:Resources.NoGroupSelected}" />
                                </Border>

                                <Border>
                                    <Border.Resources>
                                        <Style BasedOn="{StaticResource StyleLabelForm}" TargetType="{x:Type Label}" />
                                        <Style BasedOn="{StaticResource StyleTextBlockForm}" TargetType="{x:Type TextBlock}" />
                                    </Border.Resources>

                                    <Border.Visibility>
                                        <Binding Converter="{StaticResource NullToVisibilityConverter}" Path="SelectedSyncGroup"/>
                                    </Border.Visibility>

                                    <controls:Form DockPanel.Dock="Top" >
                                        <Label controls:Form.IsLabel="True" 
                                               Content="{x:Static p:Resources.GroupNameLabel}" />
                                        <TextBox controls:Form.Fill="True"
                                                 Text="{Binding SelectedSyncGroup.Name, UpdateSourceTrigger=PropertyChanged}" />

                                        <Label controls:Form.IsLabel="True" 
                                               Content="{x:Static p:Resources.MasterLEDLabel}" />
                                        <ComboBox controls:Form.Fill="True"
                                                  ItemsSource="{Binding AvailableSyncLeds}"
                                                  SelectedItem="{Binding SelectedSyncGroup.SyncLed}"
                                                  >
                                            <ComboBox.GroupStyle>
                                                <GroupStyle>
                                                    <GroupStyle.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Border VerticalAlignment="Stretch"
                                                                    HorizontalAlignment="Stretch"
                                                                    Background="{StaticResource BrushComboBoxBackgroundGroupHeader}">
                                                                <TextBlock VerticalAlignment="Center"
                                                                           HorizontalAlignment="Left"
                                                                           FontWeight="Bold"
                                                                           Text="{Binding Name}" />
                                                            </Border>
                                                        </DataTemplate>
                                                    </GroupStyle.HeaderTemplate>
                                                </GroupStyle>
                                            </ComboBox.GroupStyle>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding LedId}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </controls:Form>
                                </Border>
                            </Grid>
                        </GroupBox>

                        <Grid Margin="0,8,0,0"
                              >


                            <Grid.Resources>
                                <GroupStyle x:Key="StyleListBoxGroup">
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center"
                                                       HorizontalAlignment="Left"
                                                       FontWeight="Bold"
                                                       Text="{Binding Name}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>

                                <DataTemplate x:Key="DataTemplateListBoxItem">
                                    <StackPanel>
                                        <TextBlock Visibility="{Binding LedVisibility}" Text="{Binding LedId}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </Grid.Resources>

                            <Grid.Visibility>
                                <Binding Converter="{StaticResource NullToVisibilityConverter}" Path="SelectedSyncGroup"/>
                            </Grid.Visibility>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="720" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>


                            <GroupBox Grid.Column="0" Margin="0,0,0,-87">
                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Top"
                                               HorizontalAlignment="Center" 
                                               Margin="0,0,0,8" 
                                               FontWeight="Bold" 
                                               Text="{x:Static p:Resources.SyncedLEDsLabel}" />
                                    <!--<ListBox SelectionMode="Extended"
                                             dd:DragDrop.IsDragSource="True"
                                             dd:DragDrop.IsDropTarget="True"
                                             dd:DragDrop.DropHandler="{Binding}"
                                             ItemTemplate="{StaticResource DataTemplateListBoxItem}"
                                             ItemsSource="{Binding SynchronizedLeds}"
                                             ScrollViewer.VerticalScrollBarVisibility="Hidden">
                                        <ListBox.GroupStyle>
                                            <StaticResource ResourceKey="StyleListBoxGroup" />
                                        </ListBox.GroupStyle>
                                    </ListBox>-->
                                    <ScrollViewer>
                                        <ListView ItemsSource="{Binding Devices}" ItemTemplate="{DynamicResource DeviceGroupItemTemplate}" Background="Transparent" Foreground="White" BorderBrush="Transparent" Style="{DynamicResource ListViewStyle1}" >
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="BorderBrush" Value="#B8111111" />
                                                <Setter Property="BorderThickness" Value="2" />
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                    </ListView>
                                    </ScrollViewer>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Grid.Column="2" Margin="0,0,0,-87">
                                <TextBlock TextWrapping="Wrap" FontSize="40">haha banner image go brrrrrrrrrrrrr</TextBlock>
                            </GroupBox>
                        </Grid>
                    </DockPanel>
                </DockPanel>
            </AdornerDecorator>
        </TabItem>


        <TabItem Header="{x:Static p:Resources.Page3Header}">
            <AdornerDecorator>
                <DockPanel LastChildFill="True" HorizontalAlignment="Center">
                    <GroupBox DockPanel.Dock="Left"  Width="630" Margin="0,0,4,0">
                        <DockPanel>
                            <TextBlock><InlineUIContainer>
                                    <Image Margin="0,-5" Width="25" Height="25" Source="/RGBSync+;component/Resources/client.png" />
                                </InlineUIContainer><Run FontSize="20" Text="{x:Static p:Resources.ClientHeading}" /><LineBreak/><InlineUIContainer>
                                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding EnableClient}"  Command="{Binding ToggleClientCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Foreground="White" Content="{x:Static p:Resources.EnableClientLabel}"/>
                                </InlineUIContainer><LineBreak/><InlineUIContainer>
                                    <Label controls:Form.IsLabel="True" Content="{x:Static p:Resources.ServerIPLabel}" Foreground="White" />
                                </InlineUIContainer><Run Text=" "/><InlineUIContainer>
                                    <TextBox x:Name="ClientHost" Text="{Binding ClientIP}" Width="80" Cursor="IBeam"/>
                                </InlineUIContainer><LineBreak/><InlineUIContainer>
                                    <Label controls:Form.IsLabel="True" Content="{x:Static p:Resources.ServerPortLabel}" Foreground="White" />
                                </InlineUIContainer><Run Text=" "/><InlineUIContainer>
                                    <TextBox x:Name="ClientPort" Text="{Binding ClientPort}" Width="40" />
                                </InlineUIContainer><LineBreak/><InlineUIContainer>
                                    <Button DockPanel.Dock="Bottom" HorizontalAlignment="Center" Command="{Binding StartClientCommand}"  IsEnabled="{Binding EnableClient}">
                                        <StackPanel VerticalAlignment="Center" Height="Auto" Orientation="Horizontal">
                                            <Image Margin="0,0,2,0" Width="20" Height="20" Source="/RGBSync+;component/Resources/start.png" />
                                            <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.StartClientButton}"/>
                                        </StackPanel>
                                    </Button>
                                </InlineUIContainer></TextBlock>
                        </DockPanel>


                    </GroupBox>
                    <GroupBox Width="630">
                        <DockPanel>
                            <TextBlock><InlineUIContainer>
                                    <Image Margin="0,-5" Width="25" Height="25" Source="/RGBSync+;component/Resources/server.png" />
                                </InlineUIContainer><Run FontSize="20" Text="{x:Static p:Resources.ServerHeading}" /><LineBreak/><InlineUIContainer>
                                    <CheckBox HorizontalAlignment="Center" IsChecked="{Binding EnableServer}"  Command="{Binding ToggleServerCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Foreground="White" Content="{x:Static p:Resources.EnableServerLabel}"/>
                                </InlineUIContainer><LineBreak/><InlineUIContainer>
                                    <Label controls:Form.IsLabel="True" Content="{x:Static p:Resources.ServerPortLabel}" Foreground="White" />
                                </InlineUIContainer><Run Text=" "/><InlineUIContainer>
                                    <TextBox x:Name="ServerPort" Text="{Binding ServerPort}" Width="40" />
                                </InlineUIContainer><LineBreak/><InlineUIContainer>
                                    <Button DockPanel.Dock="Bottom" HorizontalAlignment="Center" Command="{Binding StartServerCommand}"  IsEnabled="{Binding EnableServer}">
                                        <StackPanel VerticalAlignment="Center" Height="Auto" Orientation="Horizontal">
                                            <Image Margin="0,0,2,0" Width="20" Height="20" Source="/RGBSync+;component/Resources/start.png" />
                                            <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.StartServerButton}" />
                                        </StackPanel>
                                    </Button>
                                </InlineUIContainer></TextBlock>
                        </DockPanel>
                    </GroupBox>

                </DockPanel>

            </AdornerDecorator>
        </TabItem>
        <TabItem Header="{x:Static p:Resources.Page4Header}">
            <AdornerDecorator>
                <DockPanel LastChildFill="True">
                    <GroupBox DockPanel.Dock="Left" Margin="0,0,0,0" >
                        <TextBlock TextWrapping="Wrap"><Run Text="{x:Static p:Resources.AboutTitle}" FontSize="20"/><LineBreak /><Run Text="{x:Static p:Resources.AboutDescription}" /><LineBreak /><LineBreak /><Run Text="{x:Static p:Resources.TechSupportCTA}"/><LineBreak /><InlineUIContainer/><InlineUIContainer>
                                <Button DockPanel.Dock="Bottom" HorizontalAlignment="Center" Command="{Binding DiscordCommand}" >
                                        <StackPanel VerticalAlignment="Center" Height="Auto" Orientation="Horizontal">
                                <Image Margin="0,0,2,0" Width="20" Height="20" Source="/RGBSync+;component/Resources/discord.png" />
                                <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.JoinDiscordButton}"/>
                            </StackPanel>
                             </Button>
                                
                            </InlineUIContainer><LineBreak /><LineBreak /><InlineUIContainer><Image Height="50" Width="50" Margin="2,2,4,2" Source="/RGBSync+;component/Resources/argebee_old.ico"/>
                            </InlineUIContainer><Run BaselineAlignment="Center" Text="{x:Static p:Resources.RGBNetNotice}"/><LineBreak /><Run BaselineAlignment="Center" Text="{x:Static p:Resources.EVGANotice}"/><LineBreak /><Run BaselineAlignment="Center" Text="{x:Static p:Resources.MSINotice}"/><LineBreak/><LineBreak/><InlineUIContainer>
                                <Button Content="{x:Static p:Resources.LicenseButton}" Command="{Binding AttribCommand}"/>
                            </InlineUIContainer><LineBreak /><LineBreak /><Run Text="{x:Static p:Resources.TranslationsLabel}"/><LineBreak /><Run Text="Teun - Dutch (Nederlands)"/><LineBreak /><Run Text="Grifka - French (Français)"/><LineBreak /><Run Text="Crashniels -  German (Deutsch)"/><LineBreak /><Run Text="Sicily94 -  Italian (Italiano)"/><LineBreak /><Run Text="DrMeteor -  Portuguese (Português)"/><LineBreak /><Run Text="Ksusha Volkova -  Russian (русский)"/><LineBreak /><Run Text="Ed3n18 -  Spanish (Español)"/></TextBlock>

                    </GroupBox>
                </DockPanel>
            </AdornerDecorator>
        </TabItem>
        <TabItem Header="{x:Static p:Resources.Page2Header}" VerticalAlignment="Top">
            <AdornerDecorator>
                <GroupBox VerticalAlignment="Top">
                    <StackPanel Orientation="Vertical">

                        <Grid>
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource StyleLabelForm}" TargetType="{x:Type Label}" />
                                <Style BasedOn="{StaticResource StyleTextBlockForm}" TargetType="{x:Type TextBlock}" />
                                <Style BasedOn="{StaticResource StyleListBoxForm}" TargetType="{x:Type ListBox}" />
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="97*"/>
                                <RowDefinition Height="81*"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200*" />
                                <ColumnDefinition Width="0*"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="150*"/>
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="413*" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="414*" />
                            </Grid.ColumnDefinitions>

                            <controls:Form Grid.Column="0" Grid.ColumnSpan="6" Margin="10,0,199,120" Grid.RowSpan="2">

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.UpdateText}"  Margin="0,0,-75,0" />
                                <Button Margin="75,0,-75,0" Content="{x:Static p:Resources.CheckUpdateCommand}" Command="{Binding CheckUpdateCommand}"/>

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.VersionLabel}"  Margin="0,0,-75,0" />
                                <TextBlock Margin="75,0,-75,0" Text="{Binding Version}" />

                                <Label controls:Form.IsLabel="True" 
                                       Content="Plugins:"  Margin="0,0,-75,0" />
                                <Button  Margin="75,0,-75,0" Click="ManagePlugin" Content="{x:Static p:Resources.ManagePluginsBtn}"/>

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.PremiumLabel}"  Margin="0,0,-75,0" />
                                <StackPanel x:Name="InstalledBox" Visibility="{Binding PremiumStatus}">
                                    <TextBlock Margin="75,4,-75,0" Text="{x:Static p:Resources.InstalledLabel}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" x:Name="NotInstalledBox" Visibility="{Binding NotPremiumStatus}">
                                    <TextBlock Margin="15,4,0,0" Text="{x:Static p:Resources.NotInstalledLabel}" />
                                    <Button Margin="10,1,0,0" Content="{x:Static p:Resources.PremiumCTAButton}" Click="Button_Click_1"/>
                                </StackPanel>

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.ThemeLabel}"  Margin="0,0,-75,0" />
                                <StackPanel Orientation="Horizontal" >
                                    <ComboBox x:Name="ThemeBox" Margin="75,0,-75,0" >
                                        <ComboBoxItem Selected="rgbSelected" x:Name="rgbItem" Content="RGB"/>
                                        <ComboBoxItem Selected="darkSelected" x:Name="darkItem" Content="Dark"/>
                                        <ComboBoxItem Visibility="Hidden" Selected="customSelected" x:Name="customItem" Content="Custom"/>
                                    </ComboBox>
                                    <Button Margin="100,1,-100,0" Click="ApplyButton_Click" Content="{x:Static p:Resources.ApplyLabel}" x:Name="ApplyButton"  Visibility="Visible"/>
                                </StackPanel>

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.LanguageLabel}"  Margin="0,0,-75,0" />
                                <ComboBox x:Name="LangBox" SelectionChanged="Lang_SelectionChanged" Margin="75,0,-75,0">
                                    <ComboBoxItem Selected="DutchSelected" x:Name="dutchItem" Content="Dutch (Nederlands)"/>
                                    <ComboBoxItem Selected="EnglishSelected" x:Name="englishItem" Content="English"/>
                                    <ComboBoxItem Selected="FrenchSelected" x:Name="frenchItem" Content="French (Français)"/>
                                    <ComboBoxItem Selected="GermanSelected" x:Name="germanItem" Content="German (Deutsch)"/>
                                    <ComboBoxItem Selected="ItalianSelected" x:Name="italianItem" Content="Italian (Italiano)"/>
                                    <ComboBoxItem Selected="PortugeseSelected" x:Name="portugeseItem" Content="Portugese (Português)"/>
                                    <ComboBoxItem Selected="RussianSelected" x:Name="russianItem" Content="Russian (русский)"/>
                                    <ComboBoxItem Selected="SpanishSelected" x:Name="spanishItem" Content="Spanish (Español)"/>
                                    <ComboBoxItem Selected="TestSelected" x:Name="testItem" Content="UI Test Mode" Visibility="Hidden"/>
                                </ComboBox>

                                <Label Margin="0,0,-75,0"  Width="350" controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.PollingRateLabel}" />
                                <Slider Margin="75,0,-75,0" Minimum="1" Maximum="100" controls:Form.Fill="True"  IsSnapToTickEnabled="True" TickFrequency="1" TickPlacement="BottomRight"
                                        Value="{Binding UpdateRate}"
                                        attached:SliderValue.Unit="{x:Static p:Resources.PollingRateUnit}"
                                        ToolTip="{x:Static p:Resources.PollingRateTooltip}" />

                                <Label controls:Form.IsLabel="True" Margin="0,0,-75,0"  Width="350"
                                        Content="{x:Static p:Resources.RunasAdminLabel}" />
                                <CheckBox Margin="75,0,-75,0" VerticalAlignment="Center" IsChecked="{Binding RunAsAdmin}"  Command="{Binding SetAdminCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Foreground="White"  Content="{x:Static p:Resources.RunasAdmin}"/>

                                <Label controls:Form.IsLabel="True" Margin="0,0,-75,0"  Width="350"
                                       Content="{x:Static p:Resources.MinimizationLabel}" />
                                <CheckBox Margin="75,0,-75,0" VerticalAlignment="Center" IsChecked="{Binding IsMinimized}"  Command="{Binding OpenSetCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Foreground="White" Content="{x:Static p:Resources.MinimizationText}"/>


                                <Label Margin="0,0,-75,0" controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.DiscordLabel}"
                                       />
                                <CheckBox Margin="75,0,-75,0" ToolTip="{x:Static p:Resources.DiscordTooltip}" VerticalAlignment="Center" IsChecked="{Binding EnableDiscordRPC}"  Command="{Binding SetRPCCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Foreground="White" Content="{x:Static p:Resources.DiscordText}"/>

                                <Label  Margin="0,0,-75,0" controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.DelayLabel}"   />
                                <Slider Margin="75,0,-75,0" Minimum="0" Maximum="120" controls:Form.Fill="True"  IsSnapToTickEnabled="True" TickFrequency="1" TickPlacement="BottomRight"
                                        Value="{Binding StartupDelay}"
                                        attached:SliderValue.Unit="{x:Static p:Resources.DelayUnit}"
                                        ToolTip="{x:Static p:Resources.DelayTooltip}" />

                                <Label controls:Form.LineBreaks="1" controls:Form.IsLabel="True" Content="{x:Static p:Resources.DevicesLabel}"  Margin="0,0,-75,0" />
                                <Button Command="{Binding OpenExcludeToolCommand}" Margin="80,2,0,-2"  Content="{x:Static p:Resources.ExcludeBtn}"/>

                            </controls:Form>

                        </Grid>
                        <ListBox ItemsSource="{Binding Devices, Source={x:Static core:RGBSurface.Instance}}"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     ScrollViewer.HorizontalScrollBarVisibility="Visible"
                                     x:Name="AvailableDevicesListBox"
                                 Height="200"
                                 Width="480" Margin="-350,-110,0,0" Padding="0,0,0,10">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource StyleTextBlockForm}">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="&gt;  {0} {1} ({2})">
                                                <Binding Path="DeviceInfo.Manufacturer" />
                                                <Binding Path="DeviceInfo.Model" />
                                                <Binding Path="DeviceInfo.DeviceType" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </GroupBox>
            </AdornerDecorator>
        </TabItem>
    </TabControl>

</controls:BlurredDecorationWindow>
