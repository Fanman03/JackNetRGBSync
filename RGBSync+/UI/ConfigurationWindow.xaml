<controls:BlurredDecorationWindow
                                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                  xmlns:core="clr-namespace:RGB.NET.Core;assembly=RGB.NET.Core"
                                  xmlns:ui="clr-namespace:RGBSyncPlus.UI"
                                  xmlns:controls="clr-namespace:RGBSyncPlus.Controls"
                                  xmlns:p = "clr-namespace:RGBSyncPlus.Properties"
                                  xmlns:styles="clr-namespace:RGBSyncPlus.Styles"
                                  xmlns:attached="clr-namespace:RGBSyncPlus.Attached"
                                  xmlns:helper="clr-namespace:RGBSyncPlus.Helper"
                                  xmlns:dd="urn:gong-wpf-dragdrop"
                                  xmlns:Converter="clr-namespace:RGBSyncPlus.Converter" x:Class="RGBSyncPlus.UI.ConfigurationWindow"
                                  mc:Ignorable="d"
                                  Title="{x:Static p:Resources.Title}" 
                                  Icon="pack://application:,,,/RGBSync+;component/Resources/HiRes.ico"
                                  IconCommand="{Binding OpenHomepageCommand}"
                                  Width="1280"  Height="720"
                                  Closed="ConfigurationWindow_OnClosed" ResizeMode="CanResizeWithGrip">

    <controls:BlurredDecorationWindow.Resources>
        <styles:CachedResourceDictionary>
            <styles:CachedResourceDictionary.MergedDictionaries>
                <styles:CachedResourceDictionary Source="/RGBSync+;component/Styles/RainbowDefault/Navigation.xaml" />
                <styles:CachedResourceDictionary Source="/RGBSync+;component/Styles/RainbowDefault/Scrollbar.xaml" />
            </styles:CachedResourceDictionary.MergedDictionaries>
            <Converter:IndeterminateBoolToOpacityConverter x:Key="IndeterminateBoolToOpacityConverter"/>
            <Converter:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter"/>
            <Converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <Converter:DeviceTypeToImageConverter x:Key="DeviceTypeToImageConverter"/>

            <DataTemplate x:Key="DeviceGroupItemTemplate">

                <Grid Margin="0,5,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="32"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" IsChecked="{Binding AllSelected}" ></CheckBox>
                        <Image ToolTip="{Binding RGBDevice.DeviceInfo.DeviceType}" Width="32" Height="32"  Grid.Column="1"  Source="{Binding RGBDevice.DeviceInfo.DeviceType, Converter={StaticResource DeviceTypeToImageConverter}}"/>
                        <TextBlock TextTrimming="CharacterEllipsis" Grid.Column="2" Text="{Binding Name}" ToolTip="{Binding Name}" Margin="10,-2,0,0" FontSize="24" FontFamily="Segoe UI Light" Foreground="White" VerticalAlignment="Center" MouseUp="ToggleCheckBox">
                        </TextBlock>

                        <Button Grid.Column="3" Margin="0,0,5,0" Visibility="{Binding Expanded, Converter={StaticResource BoolToVisibilityConverter}}" Click="ToggleExpanded" Width="32" Height="32" HorizontalAlignment="Right">
                            <TextBlock Foreground="White" MouseDown="ToggleExpanded"><Image Source="arrow_up.png"></Image></TextBlock>
                        </Button>

                        <Button Grid.Column="3" Margin="0,0,5,0" Visibility="{Binding Expanded, Converter={StaticResource InvertedBoolToVisibilityConverter}}" Click="ToggleExpanded"  Width="32" Height="32" HorizontalAlignment="Right">
                            <TextBlock Foreground="White" MouseDown="ToggleExpanded"><Image Source="arrow_down.png"></Image></TextBlock>
                        </Button>

                    </Grid>
                    <ListView Grid.Row="1" Margin="50,10,0,10" ItemsSource="{Binding DeviceLeds}" ItemTemplate="{DynamicResource DeviceGroupLEDItemTemplate}" Background="Transparent" Foreground="White" BorderBrush="Transparent" Visibility="{Binding Expanded, Converter={StaticResource BoolToVisibilityConverter}}" />
                </Grid>

            </DataTemplate>

            <DataTemplate x:Key="DeviceMapperItemTemplate">

                <Grid Margin="0,5,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="32"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" IsChecked="{Binding Enabled}" ></CheckBox>
                        <Image ToolTip="{Binding SourceDevice.DeviceType}" Width="32" Height="32"  Grid.Column="1"  Source="{Binding SourceDevice.DeviceType, Converter={StaticResource DeviceTypeToImageConverter}}"/>
                        <TextBlock TextTrimming="CharacterEllipsis" Grid.Column="2" Text="{Binding SourceDevice.Name}" ToolTip="{Binding SourceDevice.Name}" Margin="10,-2,0,0" FontSize="24" FontFamily="Segoe UI Light" Foreground="White" VerticalAlignment="Center" MouseUp="ToggleCheckBox">
                        </TextBlock>

                        <Button Grid.Column="3" Margin="0,0,5,0" Visibility="{Binding Expanded, Converter={StaticResource BoolToVisibilityConverter}}" Click="ToggleDMExpanded" Width="32" Height="32" HorizontalAlignment="Right">
                            <TextBlock Foreground="White" MouseDown="ToggleExpanded"><Image Source="arrow_up.png"></Image></TextBlock>
                        </Button>

                        <Button Grid.Column="3" Margin="0,0,5,0" Visibility="{Binding Expanded, Converter={StaticResource InvertedBoolToVisibilityConverter}}" Click="ToggleDMExpanded"  Width="32" Height="32" HorizontalAlignment="Right">
                            <TextBlock Foreground="White" MouseDown="ToggleExpanded"><Image Source="arrow_down.png"></Image></TextBlock>
                        </Button>

                    </Grid>
                    <ListView Grid.Row="1" Margin="50,10,0,10" ItemsSource="{Binding DestinationDevices}" ItemTemplate="{DynamicResource DeviceMapDestinationItemTemplate}" Background="Transparent" Foreground="White" BorderBrush="Transparent" Visibility="{Binding Expanded, Converter={StaticResource BoolToVisibilityConverter}}" />
                </Grid>

            </DataTemplate>

            <DataTemplate x:Key="DeviceMapperSourceItemTemplate" >

                <Grid Margin="0,5,0,5" Background="#80000000" HorizontalAlignment="Stretch" MouseLeftButtonUp="ClickSource">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="90"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid Width="64" Height="64" Margin="10" Background="#F2000000" MaxWidth="128" Grid.Column="2">
                            <Image Width="64" Height="64" Source="generic.png"></Image>
                            <Image Source="{Binding Image}" Width="128" Height="128"></Image>
                            <Rectangle Width="64" Height="64">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#00000000" Offset="0.724"/>
                                        <GradientStop Color="Black" Offset="0.93"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>


                            <Border BorderBrush="White" BorderThickness="1"></Border>
                        </Grid>
                        <StackPanel Grid.Column="3">
                            <StackPanel Orientation="Horizontal" Margin="0">
                                <Image ToolTip="{Binding Device.DeviceType}" Width="20" Height="20"  Grid.Column="1"  Source="{Binding Device.DeviceType, Converter={StaticResource DeviceTypeToImageConverter}}"/>
                                <TextBlock Text="{Binding Device.DeviceType}" Margin="8"></TextBlock>
                                <TextBlock TextTrimming="CharacterEllipsis" Margin="8" Text="{Binding ProviderName}" />
                            </StackPanel>
                            <TextBlock TextTrimming="CharacterEllipsis"  Text="{Binding Name}" ToolTip="{Binding Name}" Margin="0,-8,0,0" FontSize="24" FontFamily="Segoe UI Light" Foreground="White" VerticalAlignment="Center"/>

                        </StackPanel>


                    </Grid>
                    <Grid Grid.Row="0" Grid.RowSpan="2" Visibility="{Binding Enabled, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Border BorderThickness="8" BorderBrush="#ff007F0E">
                            <Image Source="selectedCorner.png" Width="32" Height="32" VerticalAlignment="Bottom" HorizontalAlignment="Right"></Image>
                        </Border>
                    </Grid>
                </Grid>

            </DataTemplate>
            <DataTemplate x:Key="DeviceGroupLEDItemTemplate">
                <StackPanel Margin="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding IsSelected}"/>
                    <TextBlock Margin="10,0,0,0" Text="{Binding AutoName, Mode=OneWay}"/>
                </StackPanel>
            </DataTemplate>


            <DataTemplate x:Key="DeviceMapDestinationItemTemplate">
                <StackPanel Margin="1" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding Enabled}"/>
                    <TextBlock Margin="10,0,0,0" Text="{Binding DestinationDevice.Name, Mode=OneWay}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="DeviceMapItemTemplate">
                <Grid>
                    <TextBlock Text="{Binding SourceDevice.Name}" FontFamily="Segoe UI Light" FontSize="24" HorizontalAlignment="Left"></TextBlock>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="DeviceControlTemplate">
                <Grid Width="256" Height="192" Margin="10" Background="#F2000000" MaxWidth="256">
                    <!--<Image Width="192" Height="192" Source="generic2.png"></Image>-->
                    <Rectangle Width="256" Height="192">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="#FF0F0F0F" Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Image Source="{Binding Image}" Width="256" Height="192"></Image>
                    <Rectangle Width="256" Height="192">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="#00000000" Offset="0.724"/>
                                <GradientStop Color="Black" Offset="0.93"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Grid Width="256" Background="#40000000" HorizontalAlignment="Left" VerticalAlignment="Bottom" >
                        <StackPanel Orientation="Horizontal">
                            <Image ToolTip="{Binding ControlDevice.DeviceType}" Width="24" Height="24"  Source="{Binding ControlDevice.DeviceType, Converter={StaticResource DeviceTypeToImageConverter}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="6"/>
                            <TextBlock Text="{Binding ControlDevice.DeviceType}" FontSize="18" VerticalAlignment="Center" Margin="8,0,0,0"></TextBlock>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,8,0">
                            <Image Source="pull.png" Width="24" Visibility="{Binding SupportsPull, Converter={StaticResource BoolToVisibilityConverter}}"></Image>
                            <Image Source="push.png" Width="24" Visibility="{Binding SupportsPush, Converter={StaticResource BoolToVisibilityConverter}}"></Image>
                        </StackPanel>
                    </Grid>
                    <StackPanel MaxWidth="256">
                        <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,20,0,0" MaxWidth="256" Background="#ddFFFFFF">

                            <TextBlock Text="{Binding ProviderName}" Margin="6" FontSize="20" FontWeight="Bold" MaxWidth="192" TextWrapping="WrapWithOverflow" HorizontalAlignment="Right" TextAlignment="Right" Foreground="Black"></TextBlock>
                        </Grid>

                        <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,20,0,0" MaxWidth="256">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="Black" Offset="0.019"/>
                                    <GradientStop Color="#CC000000" Offset="0.025"/>
                                    <GradientStop Color="#CC000000" Offset="0.837"/>
                                    <GradientStop Color="#10000000" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <TextBlock Text="{Binding Name}" Margin="6" FontSize="14" MaxWidth="256" TextWrapping="WrapWithOverflow" HorizontalAlignment="Right" TextAlignment="Right"></TextBlock>
                        </Grid>
                    </StackPanel>
                    <!--<Border BorderBrush="White" BorderThickness="1"></Border>-->
                </Grid>
            </DataTemplate>
        </styles:CachedResourceDictionary>
    </controls:BlurredDecorationWindow.Resources>


    <controls:BlurredDecorationWindow.DataContext>
        <ui:ConfigurationViewModel/>
    </controls:BlurredDecorationWindow.DataContext>

    <TabControl Style="{StaticResource StyleTabControlNavigation}" >
        <TabItem Header="{x:Static p:Resources.DevicesHeader}">
            <AdornerDecorator>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Margin="-8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Background="#80eeeeee">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="4">
                                <GroupBox BorderThickness="0">
                                    <StackPanel Orientation="Horizontal">
                                        <Label>Profile</Label>
                                        <ComboBox ItemsSource="{Binding ProfileNames}"></ComboBox>
                                    </StackPanel>
                                </GroupBox>

                            </StackPanel>

                        </Grid>
                        <GroupBox Grid.Row="1">
                            <Grid>
                                <Rectangle Height="30" Width="200"></Rectangle>

                                <ListView ItemsSource="{Binding SLSDevices}" ItemTemplate="{DynamicResource DeviceControlTemplate}" SelectionChanged="DevicesListSelectionChanged" x:Name="DeviceConfigList">
                                    <ListView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <!--<StackPanel Orientation="Horizontal" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.PanningMode="HorizontalOnly"></StackPanel>-->
                                            <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
                                           ItemWidth="{Binding (ListView.View).ItemWidth, RelativeSource={RelativeSource AncestorType=ListView}}"
                                           MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"
                                           ItemHeight="{Binding (ListView.View).ItemHeight, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                        </ItemsPanelTemplate>
                                    </ListView.ItemsPanel>

                                </ListView>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <GroupBox Grid.Row="1" x:Name="ConfigPanel" Background="#80000000" Foreground="White" BorderBrush="Transparent" Margin="-8,0,-8,-8">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                           
                            <Image  Grid.Row="0"  Grid.RowSpan="2" Source="{Binding Image}" Stretch="UniformToFill" VerticalAlignment="Center" Margin="0">
                                <Image.Effect>
                                    <BlurEffect Radius="8"></BlurEffect>
                                </Image.Effect>
                            </Image>
                            <Rectangle Grid.Row="0" Fill="#d0000000" Margin="-8" Grid.RowSpan="2"></Rectangle>
                            <Grid Margin="0" VerticalAlignment="Top">
                                <Grid Background="#CC000000" Margin="-4">
                                    <StackPanel Orientation="Horizontal"  Height="48" Margin="8,0,0,0">
                                        <Image ToolTip="{Binding ControlDevice.DeviceType}" Width="32" Height="32"  Source="{Binding ControlDevice.DeviceType, Converter={StaticResource DeviceTypeToImageConverter}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="6"/>
                                        <TextBlock Text="{Binding ControlDevice.DeviceType}" FontSize="18" VerticalAlignment="Center"></TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  Height="48">
                                        <TextBlock FontSize="36" Text="{Binding ProviderName}" FontWeight="Bold"></TextBlock>

                                        <TextBlock FontSize="36" Text="{Binding Name}" FontWeight="Light" Margin="12,0,0,0"></TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Height="48" Margin="0,0,8,0">
                                        <Image Source="pull.png" Width="24" Visibility="{Binding SupportsPull, Converter={StaticResource BoolToVisibilityConverter}}"></Image>
                                        <Image Source="push.png" Width="24" Visibility="{Binding SupportsPush, Converter={StaticResource BoolToVisibilityConverter}}"></Image>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                            <TabControl Grid.Row="1" Background="#40000000" Foreground="White" BorderBrush="#80000000" BorderThickness="0" Margin="-8" Padding="8" VerticalAlignment="Top"  FontSize="24" FontWeight="Light" SelectionChanged="TabControl_SelectionChanged">
                                <TabItem 
                                    Header="Sync To" 
                                    FontSize="24" FontWeight="Light"
                                    Visibility="{Binding SupportsPush, Converter={StaticResource BoolToVisibilityConverter}}" 
                                    Foreground="White" 
                                    BorderBrush="Transparent"
                                    HorizontalContentAlignment="Stretch">
                                    <ListView 
x:Name="SourceList"
                                        ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Path=DataContext.SourceDevices}" 
                                        ItemTemplate="{DynamicResource DeviceMapperSourceItemTemplate}" 
                                        Background="Transparent" 
                                        Foreground="White" 
                                        BorderBrush="Transparent" 
                                        SelectionMode="Single" 
                                        HorizontalContentAlignment="Stretch" >


                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
                                                                        />
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                    </ListView>

                                </TabItem>

                                <TabItem Header="Alignment" Background="#00000000" Foreground="White" BorderBrush="Transparent">
                                    
                                        <Grid  >
                                            <StackPanel Background="Transparent" >

                                                <Label Foreground="White" FontSize="16">Use the controls below to make your devices match the images</Label>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button FontSize="24" Content="&lt;" Height="60" Width="60" Margin="8" Click="Button_Click" ></Button>
                                                    <Button FontSize="24" Content="&gt;" Height="60" Width="60" Margin="8" Click="Button_Click_2" ></Button>
                                                    <Button FontSize="24" Content="&lt; &gt;" Height="60" Width="60"  Margin="8" Click="Button_Click_3"></Button>

                                                    <Image Source="alignment_template.png" Width="172"></Image>
                                                </StackPanel>

                                            </StackPanel>
                                        </Grid>
                                    
                                </TabItem>


                                <TabItem Header="Config" HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch">
                                    <Grid x:Name="ConfigHere" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
</Grid>
                                </TabItem>
                            </TabControl>
                        </Grid>
                    </GroupBox>
                </Grid>

            </AdornerDecorator>
        </TabItem>

        <!--<TabItem Header="{x:Static p:Resources.Page1Header}">

            <AdornerDecorator>
                <DockPanel LastChildFill="True" >
                    <GroupBox DockPanel.Dock="Bottom" Width="260" HorizontalAlignment="Left" >
                        <DockPanel VerticalAlignment="Bottom">
                            <DockPanel DockPanel.Dock="Top"
                                    HorizontalAlignment="Center" >
                                <Button Command="{Binding ImportCommand}" >
                                    <StackPanel Height="Auto" Orientation="Horizontal">
                                        <Image Margin="0,0,2,0" Width="16" Height="16" Source="/RGBSync+;component/Resources/import.png" />
                                        <TextBlock TextWrapping="Wrap" Text="{x:Static p:Resources.ImportButton}"/>
                                    </StackPanel>
                                </Button>
                                <Button
                                    Command="{Binding ImportCloudCommand}" ToolTip="Import data from cloud save.">
                                    <Image Margin="0,0,2,0" Width="16" Height="16" Source="/RGBSync+;component/Resources/DownloadFromCloud.png" />
                                </Button>
                            </DockPanel>
                            <DockPanel  DockPanel.Dock="Bottom"
                                    HorizontalAlignment="Center" >
                                <Button
                                    Command="{Binding ExportCommand}" >
                                    <StackPanel Height="Auto" Orientation="Horizontal">
                                        <Image Margin="0,0,2,0" Width="16" Height="16" Source="/RGBSync+;component/Resources/export.png" />
                                        <TextBlock Text="{x:Static p:Resources.ExportButton}"/>
                                    </StackPanel>
                                </Button>
                                <Button
                                    Command="{Binding ExportCloudCommand}" ToolTip="Export data to cloud save.">
                                    <Image Margin="0,0,2,0" Width="16" Height="16" Source="/RGBSync+;component/Resources/UploadToCloud.png" />
                                </Button>
                            </DockPanel>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox DockPanel.Dock="Bottom" Width="260" HorizontalAlignment="Left" >
                        <GroupBox.Resources>
                            <Style BasedOn="{StaticResource StyleLabelForm}" TargetType="{x:Type Label}" />
                        </GroupBox.Resources>
                        <DockPanel VerticalAlignment="Bottom">
                            <Label controls:Form.IsLabel="True" 
                                               Content="{x:Static p:Resources.ProfileNameLabel}" />
                            <TextBox controls:Form.Fill="True"
                                                 Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" SpellCheck.IsEnabled="True" />

                        </DockPanel>
                    </GroupBox>
                    <GroupBox DockPanel.Dock="Left" Width="260">
                        <DockPanel VerticalAlignment="Top" >

                            <Button DockPanel.Dock="Bottom"
                                    HorizontalAlignment="Center" 
                                    Margin="8" 
                                    Command="{Binding AddSyncGroupCommand}" >
                                <StackPanel VerticalAlignment="Center" Height="Auto" Orientation="Horizontal">
                                    <Image Margin="0,0,2,0" Width="18" Height="18" Source="/RGBSync+;component/Resources/add.png" />
                                    <TextBlock VerticalAlignment="Center" FontSize="16" Text="{x:Static p:Resources.NewGroupButton}"/>
                                </StackPanel>
                            </Button>


                            <ListBox ItemsSource="{Binding SyncGroups}"
                                     SelectedItem="{Binding SelectedSyncGroup}"
                                     ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                     ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                     x:Name="LEDGroupsListbox">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <Button Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                                    ToolTip="Remove"
                                                    Command="{Binding DataContext.RemoveSyncGroupCommand, RelativeSource={RelativeSource AncestorType={x:Type controls:BlurredDecorationWindow}}}"
                                                    CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                                                <Image Source="/RGBSync+;component/Resources/close.png" />
                                            </Button>
                                            <TextBlock Grid.Column="1" Margin="4" Text="{Binding DisplayName}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </GroupBox>



                    <DockPanel Margin="8,0,0,-41">
                        <GroupBox DockPanel.Dock="Top">
                            <Grid>
                                <Border HorizontalAlignment="Center" 
                                        VerticalAlignment="Top" 
                                        Margin="16"
                                        Visibility="{Binding SelectedSyncGroup, ConverterParameter=True, Converter={StaticResource NullToVisibilityConverter}}">
                                    <TextBlock Text="{x:Static p:Resources.NoGroupSelected}" />
                                </Border>

                                <Border>
                                    <Border.Resources>
                                        <Style BasedOn="{StaticResource StyleLabelForm}" TargetType="{x:Type Label}" />
                                        <Style BasedOn="{StaticResource StyleTextBlockForm}" TargetType="{x:Type TextBlock}" />
                                    </Border.Resources>

                                    <Border.Visibility>
                                        <Binding Converter="{StaticResource NullToVisibilityConverter}" Path="SelectedSyncGroup"/>
                                    </Border.Visibility>

                                    <controls:Form DockPanel.Dock="Top" >
                                        <Label controls:Form.IsLabel="True" 
                                               Content="{x:Static p:Resources.GroupNameLabel}" />
                                        <TextBox controls:Form.Fill="True"
                                                 Text="{Binding SelectedSyncGroup.Name, UpdateSourceTrigger=PropertyChanged}" />

                                        <Label controls:Form.IsLabel="True" 
                                               Content="{x:Static p:Resources.MasterLEDLabel}" />
                                        <ComboBox controls:Form.Fill="True"
                                                  ItemsSource="{Binding AvailableSyncLeds}"
                                                  SelectedItem="{Binding SelectedSyncGroup.SyncLed}"
                                                  >
                                            <ComboBox.GroupStyle>
                                                <GroupStyle>
                                                    <GroupStyle.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Border VerticalAlignment="Stretch"
                                                                    HorizontalAlignment="Stretch"
                                                                    Background="{StaticResource BrushComboBoxBackgroundGroupHeader}">
                                                                <TextBlock VerticalAlignment="Center"
                                                                           HorizontalAlignment="Left"
                                                                           FontWeight="Bold"
                                                                           Text="{Binding Name}" />
                                                            </Border>
                                                        </DataTemplate>
                                                    </GroupStyle.HeaderTemplate>
                                                </GroupStyle>
                                            </ComboBox.GroupStyle>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding AutoName}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </controls:Form>
                                </Border>
                            </Grid>
                        </GroupBox>

                        <Grid Margin="0,8,0,0"
                              >


                            <Grid.Resources>
                                <GroupStyle x:Key="StyleListBoxGroup">
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center"
                                                       HorizontalAlignment="Left"
                                                       FontWeight="Bold"
                                                       Text="{Binding Name}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>

                                <DataTemplate x:Key="DataTemplateListBoxItem">
                                    <StackPanel>
                                        <TextBlock Visibility="{Binding LedVisibility}" Text="{Binding LedId}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </Grid.Resources>

                            <Grid.Visibility>
                                <Binding Converter="{StaticResource NullToVisibilityConverter}" Path="SelectedSyncGroup"/>
                            </Grid.Visibility>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="300" />
                            </Grid.ColumnDefinitions>


                            <GroupBox Grid.Column="0" Margin="0,0,0,-87" x:Name="SyncLedsColumn" >
                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Top"
                                               HorizontalAlignment="Center" 
                                               Margin="0,0,0,8" 
                                               FontWeight="Bold" 
                                               Text="{x:Static p:Resources.SyncedLEDsLabel}" />
                                    -->
        <!--<ListBox SelectionMode="Extended"
                                             dd:DragDrop.IsDragSource="True"
                                             dd:DragDrop.IsDropTarget="True"
                                             dd:DragDrop.DropHandler="{Binding}"
                                             ItemTemplate="{StaticResource DataTemplateListBoxItem}"
                                             ItemsSource="{Binding SynchronizedLeds}"
                                             ScrollViewer.VerticalScrollBarVisibility="Hidden">
                                        <ListBox.GroupStyle>
                                            <StaticResource ResourceKey="StyleListBoxGroup" />
                                        </ListBox.GroupStyle>
                                    </ListBox>-->
        <!--
                                    <ScrollViewer>
                                        <ListView ItemsSource="{Binding Devices}" ItemTemplate="{DynamicResource DeviceGroupItemTemplate}" Background="Transparent" Foreground="White" BorderBrush="Transparent" PreviewMouseWheel="HandlePreviewMouseWheel" >
                                        </ListView>
                                    </ScrollViewer>
                                </DockPanel>
                            </GroupBox>
                            <GroupBox Grid.Column="2" Margin="0,0,0,-87" x:Name="BannerColumn" >
                                <StackPanel>
                                    <Button Panel.ZIndex="2" Width="24" Height="24" HorizontalAlignment="Right" Margin="5" Click="CloseBanner_Click">
                                        <Image Source="close.png"></Image>
                                    </Button>
                                    <Image Panel.ZIndex="1" Cursor="Hand" Margin="0,-35,0,0" MouseLeftButtonDown="BannerImage_MouseLeftButtonDown" x:Name="BannerImage" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill"/>
                                </StackPanel>
                            </GroupBox>
                        </Grid>
                    </DockPanel>
                </DockPanel>
            </AdornerDecorator>
        </TabItem>-->

        <!--
        <TabItem Header="{x:Static p:Resources.Page5Header}">

            <AdornerDecorator>
                <DockPanel LastChildFill="True">
                    <GroupBox DockPanel.Dock="Left" Margin="0,0,0,0" >


    <ScrollViewer Grid.Row="1">
                            <ListView ItemsSource="{Binding DeviceMappingViewModel}" ItemTemplate="{DynamicResource DeviceMapperItemTemplate}" Background="Transparent" Foreground="White" BorderBrush="Transparent" PreviewMouseWheel="HandlePreviewMouseWheel" >
                            </ListView>
                        </ScrollViewer>

                    </GroupBox>
                </DockPanel>
            </AdornerDecorator>
        </TabItem>
      -->
        <TabItem Header="{x:Static p:Resources.Page4Header}">
            <AdornerDecorator>
                <DockPanel LastChildFill="True">
                    <GroupBox DockPanel.Dock="Left" Margin="0,0,0,0" >
                        <TextBlock TextWrapping="Wrap"><Run Text="{x:Static p:Resources.AboutTitle}" FontSize="20"/><LineBreak /><Run Text="{x:Static p:Resources.AboutDescription}" /><LineBreak /><LineBreak /><Run Text="{x:Static p:Resources.TechSupportCTA}"/><LineBreak /><InlineUIContainer/><InlineUIContainer>
                                <Button DockPanel.Dock="Bottom" HorizontalAlignment="Center" Command="{Binding DiscordCommand}" >
                                        <StackPanel VerticalAlignment="Center" Height="Auto" Orientation="Horizontal">
                                <Image Margin="0,0,2,0" Width="20" Height="20" Source="/RGBSync+;component/Resources/discord.png" />
                                <TextBlock VerticalAlignment="Center" Text="{x:Static p:Resources.JoinDiscordButton}"/>
                            </StackPanel>
                             </Button>
                                
                            </InlineUIContainer><LineBreak /><LineBreak /><InlineUIContainer><Image Height="50" Width="50" Margin="2,2,4,2" Source="/RGBSync+;component/Resources/argebee_old.ico"/>
                            </InlineUIContainer><Run BaselineAlignment="Center" Text="{x:Static p:Resources.RGBNetNotice}"/><LineBreak /><Run BaselineAlignment="Center" Text="{x:Static p:Resources.EVGANotice}"/><LineBreak /><Run BaselineAlignment="Center" Text="{x:Static p:Resources.MSINotice}"/><LineBreak/><LineBreak/><InlineUIContainer>
                                <Button Content="{x:Static p:Resources.LicenseButton}" Command="{Binding AttribCommand}"/>
                            </InlineUIContainer><LineBreak /><LineBreak /><Run Text="{x:Static p:Resources.TranslationsLabel}"/><LineBreak /><Run Text="Teun - Dutch (Nederlands)"/><LineBreak /><Run Text="Grifka - French (Français)"/><LineBreak /><Run Text="Crashniels -  German (Deutsch)"/><LineBreak /><Run Text="Sicily94 -  Italian (Italiano)"/><LineBreak /><Run Text="DrMeteor -  Portuguese (Português)"/><LineBreak /><Run Text="Ksusha Volkova -  Russian (русский)"/><LineBreak /><Run Text="Ed3n18 -  Spanish (Español)"/></TextBlock>

                    </GroupBox>
                </DockPanel>
            </AdornerDecorator>
        </TabItem>
        <TabItem Header="{x:Static p:Resources.Page2Header}" VerticalAlignment="Top">
            <AdornerDecorator>
                <GroupBox VerticalAlignment="Top">
                    <StackPanel Orientation="Vertical">

                        <Grid>
                            <Grid.Resources>
                                <Style BasedOn="{StaticResource StyleLabelForm}" TargetType="{x:Type Label}" />
                                <Style BasedOn="{StaticResource StyleTextBlockForm}" TargetType="{x:Type TextBlock}" />
                                <Style BasedOn="{StaticResource StyleListBoxForm}" TargetType="{x:Type ListBox}" />
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="97*"/>
                                <RowDefinition Height="81*"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <controls:Form Grid.Column="0" Grid.ColumnSpan="6" Margin="10,0,199,120" Grid.RowSpan="2">

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.UpdateText}"  Margin="0,0,-75,0" />
                                <Button Margin="75,0,-75,0" Content="{x:Static p:Resources.CheckUpdateCommand}" Command="{Binding CheckUpdateCommand}"/>

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.VersionLabel}"  Margin="0,0,-75,0" />
                                <TextBlock Margin="75,0,-75,0" Text="{Binding Version}" />

                                <Label controls:Form.IsLabel="True" 
                                       Content="Plugins:"  Margin="0,0,-75,0" />
                                <Button  Margin="75,0,-75,0" Click="ManagePlugin" Content="{x:Static p:Resources.ManagePluginsBtn}"/>

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.PremiumLabel}"  Margin="0,0,-75,0" />
                                <StackPanel x:Name="InstalledBox" Visibility="{Binding PremiumStatus}">
                                    <TextBlock Margin="75,4,-75,0" Text="{x:Static p:Resources.InstalledLabel}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" x:Name="NotInstalledBox" Visibility="{Binding NotPremiumStatus}">
                                    <TextBlock Margin="15,4,0,0" Text="{x:Static p:Resources.NotInstalledLabel}" />
                                    <Button Margin="10,1,0,0" Content="{x:Static p:Resources.PremiumCTAButton}" Click="Button_Click_1"/>
                                </StackPanel>

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.ThemeLabel}"  Margin="0,0,-75,0" />
                                <StackPanel Orientation="Horizontal" >
                                    <ComboBox x:Name="ThemeBox" Margin="75,0,-75,0" >
                                        <ComboBoxItem Selected="rgbSelected" x:Name="rgbItem" Content="RGB"/>
                                        <ComboBoxItem Selected="darkSelected" x:Name="darkItem" Content="Dark"/>
                                        <ComboBoxItem Visibility="Collapsed" Selected="customSelected" x:Name="customItem" Content="Custom"/>
                                    </ComboBox>
                                    <Button Margin="100,1,-100,0" Click="ApplyButton_Click" Content="{x:Static p:Resources.ApplyLabel}" x:Name="ApplyButton"  Visibility="Visible"/>
                                </StackPanel>

                                <Label controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.LanguageLabel}"  Margin="0,0,-75,0" />
                                <ComboBox x:Name="LangBox" SelectionChanged="Lang_SelectionChanged" Margin="75,0,-75,0">
                                    <ComboBoxItem Selected="DutchSelected" x:Name="dutchItem" Content="Dutch (Nederlands)"/>
                                    <ComboBoxItem Selected="EnglishSelected" x:Name="englishItem" Content="English"/>
                                    <ComboBoxItem Selected="FrenchSelected" x:Name="frenchItem" Content="French (Français)"/>
                                    <ComboBoxItem Selected="GermanSelected" x:Name="germanItem" Content="German (Deutsch)"/>
                                    <ComboBoxItem Selected="ItalianSelected" x:Name="italianItem" Content="Italian (Italiano)"/>
                                    <ComboBoxItem Selected="PortugeseSelected" x:Name="portugeseItem" Content="Portugese (Português)"/>
                                    <ComboBoxItem Selected="RussianSelected" x:Name="russianItem" Content="Russian (русский)"/>
                                    <ComboBoxItem Selected="SpanishSelected" x:Name="spanishItem" Content="Spanish (Español)"/>
                                    <ComboBoxItem Selected="TestSelected" x:Name="testItem" Content="UI Test Mode" Visibility="Collapsed"/>
                                </ComboBox>

                                <Label Margin="0,0,-75,0"  Width="350" controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.PollingRateLabel}" />
                                <Slider Margin="-270,0,100,0" Minimum="1" Maximum="100" controls:Form.Fill="True" Width="400"  IsSnapToTickEnabled="True" TickFrequency="1" TickPlacement="BottomRight"
                                        Value="{Binding UpdateRate}"
                                        attached:SliderValue.Unit="{x:Static p:Resources.PollingRateUnit}"
                                        ToolTip="{x:Static p:Resources.PollingRateTooltip}" />

                                <Label controls:Form.IsLabel="True" Margin="0,0,-75,0"  Width="350"
                                        Content="{x:Static p:Resources.RunasAdminLabel}" />
                                <CheckBox Margin="75,0,-75,0" VerticalAlignment="Center" IsChecked="{Binding RunAsAdmin}"  Command="{Binding SetAdminCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Foreground="White"  Content="{x:Static p:Resources.RunasAdmin}"/>

                                <Label controls:Form.IsLabel="True" Margin="0,0,-75,0"  Width="350"
                                       Content="{x:Static p:Resources.MinimizationLabel}" />
                                <CheckBox Margin="75,0,-75,0" VerticalAlignment="Center" IsChecked="{Binding IsMinimized}"  Command="{Binding OpenSetCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Foreground="White" Content="{x:Static p:Resources.MinimizationText}"/>


                                <Label Margin="0,0,-75,0" controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.DiscordLabel}"
                                       />
                                <CheckBox Margin="75,0,-75,0" ToolTip="{x:Static p:Resources.DiscordTooltip}" VerticalAlignment="Center" IsChecked="{Binding EnableDiscordRPC}"  Command="{Binding SetRPCCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Foreground="White" Content="{x:Static p:Resources.DiscordText}"/>

                                <Label  Margin="0,0,-75,0" controls:Form.IsLabel="True" 
                                       Content="Run on Startup:"   />
                                <CheckBox IsChecked="{Binding EnableStartupDelay}"  Command="{Binding SetDelayCommand}" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Margin="75,0,-60,0"></CheckBox>

                                <Label  Margin="0,0,-75,0" controls:Form.IsLabel="True" 
                                       Content="{x:Static p:Resources.DelayLabel}"   />
                                <Slider Margin="-270,0,100,0" Minimum="0" Maximum="120"  Width="400" controls:Form.Fill="True"  IsSnapToTickEnabled="True" TickFrequency="1" TickPlacement="BottomRight"
                                        Value="{Binding StartupDelay}" IsEnabled="{Binding EnableStartupDelay}"
                                        attached:SliderValue.Unit="{x:Static p:Resources.DelayUnit}"
                                        ToolTip="{x:Static p:Resources.DelayTooltip}" />




                            </controls:Form>

                            <controls:Form Grid.Column="1" Grid.ColumnSpan="6" Margin="10,0,199,120" Grid.RowSpan="2">

                                <Label controls:Form.LineBreaks="1" controls:Form.IsLabel="True" Content="{x:Static p:Resources.DevicesLabel}"  Margin="0,0,0,0" />
                                <Button Command="{Binding OpenExcludeToolCommand}" Margin="10,0,0,-2"  Content="{x:Static p:Resources.ExcludeBtn}"/>



                            </controls:Form>

                            <ListBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Devices, Source={x:Static core:RGBSurface.Instance}}"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     ScrollViewer.HorizontalScrollBarVisibility="Visible"
                                     x:Name="AvailableDevicesListBox"
                                 Width="480" Padding="0,-190,0,10">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource StyleTextBlockForm}">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="&gt;  {0} {1} ({2})">
                                                    <Binding Path="DeviceInfo.Manufacturer" />
                                                    <Binding Path="DeviceInfo.Model" />
                                                    <Binding Path="DeviceInfo.DeviceType" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                        </Grid>
                    </StackPanel>
                </GroupBox>
            </AdornerDecorator>
        </TabItem>
        <TabItem Header="{x:Static p:Resources.StoreHeader}">

            <AdornerDecorator>
                <DockPanel LastChildFill="True" >
                    <GroupBox DockPanel.Dock="Bottom" Width="260" HorizontalAlignment="Left" >

                    </GroupBox>
                </DockPanel>
            </AdornerDecorator>
        </TabItem>
    </TabControl>

</controls:BlurredDecorationWindow>
